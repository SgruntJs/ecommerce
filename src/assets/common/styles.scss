

$white: #fff;
$black: #0f1111;
$orange: #febd69;
$orangeHover: #f3a847;
$darkOrange: #f08804;
$borderGrey: #DDDDDD;
$lightGrey: #eaeded;
$grey: #34495e;
$darkGrey: #2c3e50;
$primary: rgb(182, 157, 230);
$amazonBlue: #008296;
$amazonDark: #232f3e;
$amazonBgBlack: #131A22;
$textBlack: #111;
$link: #007185;
$thinGrey: #d5dbdb;
$footerBlue: #37475A;
$buttonBgGrey: #f3f3f3;
$buttonColorDarkGrey: #333333;

$breakpoints: (
  "small": 767px,
  "medium": 992px,
  "desktop": 1023px,
  "large": 1200px,
) !default;

/// Mixin to manage responsive breakpoints
/// @author Kitty Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}


.main {
  width: 100%;

  @include respond-to(desktop) {
    max-width: 1500px;
    width: 100%;
    margin: 0 auto;
  }
}

.nav-sprite {
  background-image: url("../../assets/images/amazon-sprite.png");
  background-size: 350px;
}

.a-link {
  color: $link;
  cursor: pointer;
  &:hover {
    text-decoration: underline;
  }
}

.only-mobile {
  display: block;
  @include respond-to(desktop){
    display: none;
  }
}

.only-desktop {
  display: none;
  @include respond-to(desktop){
    display: block
  }
}



